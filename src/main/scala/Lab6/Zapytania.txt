Zadanie1: MATCH (t: town { name: 'Darjeeling' }), (p: peak { name: 'Sandakphu' }) MATCH x = allShortestPaths((t)-[*]->(p)) RETURN x
Zadanie2: MATCH (t: town { name: 'Darjeeling' }),(p: peak { name: 'Sandakphu' }) MATCH x = allShortestPaths((t)-[*]->(p))
WHERE ALL (PathAvailability IN relationships(x) WHERE PathAvailability.winter = "true")
RETURN x
Zadanie3: 
a: 
MATCH (t: town { name: 'Darjeeling' })-[*]-(p: peak { name: 'Sandakphu' }) UNWIND r as r1
RETURN r1.name as name, COLLECT(DISTINCT r1.distance) AS distance ORDER BY distance
b: ad1. Dla poniższych zapytań baza nie zwróciła wyniku, dlatego zapisałem do CSV tylko wynik zapytania a pod nazwą wynik3a.json
MATCH (Town: town { name: 'Darjeeling' })-[:twowheeler*{ summer: 'true' }]-(Peak: peak) return DISTINCT(Peak.name) as destination
MATCH (Town: town { name: 'Darjeeling' })-[:twowheeler*{ summer: 'true' }]-(Town2: town) return DISTINCT(Town2.name) as destination
MATCH (Town: town { name: 'Darjeeling' })-[:twowheeler*{ summer: 'true' }]-(Village: village) return DISTINCT(Village.name) as destination
Zadanie4: MATCH (Airport)<-[:ORIGIN]-(Flight) Return Airport.name as airport, count(Flight) as flights ORDER BY flights desc
Zadanie5: 
MATCH (airport1: Airport { name: 'LAX' })<-[:ORIGIN]-(flight: Flight)-[:DESTINATION]->(airport2: Airport), (flight)<-[:ASSIGN]-(ticket: Ticket) WITH airport1, airport2, flight, min(ticket.price) as min
MATCH (flight)<-[:ASSIGN]-(ticket: Ticket) WITH airport1, airport2, flight, ticket
WHERE ticket.price < 3000 
RETURN DISTINCT airport2.name
Zadanie6: MATCH (airport1: Airport { name: 'LAX' })<-[:ORIGIN]-(flight: Flight)-[:DESTINATION]->(airport2: Airport { name: 'DAY' }), (flight)<-[:ASSIGN]-(ticket: Ticket) WITH airport1, airport2, flight, min(ticket.price) as min
MATCH (flight)<-[:ASSIGN]-(ticket: Ticket) WITH airport1, airport2, flight, ticket
RETURN airport1 , airport2 
order by ticket.price
Zadanie9:
MATCH (airport1: Airport)<-[:ORIGIN]-(flight: Flight)-[:DESTINATION]->(airport2: Airport) WITH flight.airline as airline, airport1.name as origin, airport2.name as destination, count(flight.airline) as cost RETURN origin, airline, destination, cost ORDER BY cost DESC

